
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	ОбновитьСписок();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьПротокол(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьПротокол(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;   
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ПолучитьПротокол(ТекущиеДанные);
	
	Результат.Протокол.Показать(Результат.Заголовок);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПротоколыБезОшибок(Команда)
	
	УдалитьПротоколыБезОшибокНаСервере();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьСписок();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьПротокол(ТекущиеДанные)
	
	Заголовок = СтрШаблон(НСтр("ru='Протокол обмена (%1) от %2'"),
					      ТекущиеДанные.ВидПротокола,
							Формат(ТекущиеДанные.Период, "ДЛФ=DT"));
	Протокол  = РегистрыСведений.ЕАС_ПротоколыОбмена.ПолучитьТекстПротокола(
		ТекущиеДанные.ВидПротокола,
		ТекущиеДанные.Период); // период записи протокола
	
	Возврат Новый Структура("Протокол, Заголовок", Протокол, Заголовок);
	
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьПротоколыБезОшибокНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПротоколыОбмена.Период КАК Период,
	|	ПротоколыОбмена.ВидПротокола КАК ВидПротокола,
	|	ПротоколыОбмена.ОбластьДанных КАК ОбластьДанных
	|ИЗ
	|	РегистрСведений.ЕАС_ПротоколыОбмена КАК ПротоколыОбмена
	|ГДЕ
	|	КоличествоОшибок = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	НаборЗаписей = РегистрыСведений.ЕАС_ПротоколыОбмена.СоздатьНаборЗаписей();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.ВидПротокола.Установить(Выборка.ВидПротокола);
		НаборЗаписей.Отбор.ОбластьДанных.Установить(Выборка.ОбластьДанных);
		
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписок()
	МодульРаботаВМоделиСервиса = ОбщегоНазначения.ОбщийМодуль("РаботаВМоделиСервиса");
	ЗначениеРазделителяСеанса = МодульРаботаВМоделиСервиса.ЗначениеРазделителяСеанса();
	Если ЗначениеРазделителяСеанса > 0 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
																			"ОбластьДанных",
	                                                                        ЗначениеРазделителяСеанса,
																			ВидСравненияКомпоновкиДанных.Равно,
																			,
																			Истина,
																			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
																			"ОбластьДанных",
	                                                                        ЗначениеРазделителяСеанса,
																			ВидСравненияКомпоновкиДанных.Равно,
																			,
																			Ложь,
																			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;																		
																			// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти

