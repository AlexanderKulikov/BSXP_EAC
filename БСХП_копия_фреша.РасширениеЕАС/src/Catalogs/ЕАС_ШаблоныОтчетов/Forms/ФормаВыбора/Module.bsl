#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
																	   "ОбластьДанных",
	                                                                   ЕАС_ОбластиДанныхКопируемый.ОбластьДанныхДляОбъектов(),
																	   Истина);
	Элементы.Список.Отображение = ОтображениеТаблицы.Список;	
	СформироватьДеревоНаФорме();
КонецПроцедуры
 
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РазвернутьДеревоГрупп();
	УстановитьОтборСпискаПоРодителю();    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьГруппу(Команда)
	ДанныеСтроки = Элементы.ДеревоГрупп.ДанныеСтроки(Элементы.ДеревоГрупп.ТекущаяСтрока);
	Если ДанныеСтроки <> Неопределено Тогда
		РедактироватьГруппу(ДанныеСтроки.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппу(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЭтоГруппа", Истина);
	ЗначенияЗаполнения = Новый Структура;
	ДанныеСтроки = Элементы.ДеревоГрупп.ДанныеСтроки(Элементы.ДеревоГрупп.ТекущаяСтрока); // куда
	Если ДанныеСтроки <> Неопределено Тогда
		ЗначенияЗаполнения.Вставить("Родитель", ДанныеСтроки.Ссылка);
	Иначе 
		ЗначенияЗаполнения.Вставить("Родитель", ПредопределенноеЗначение("Справочник.ЕАС_ШаблоныОтчетов.ПустаяСсылка")); 
	КонецЕсли;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения); 
	ДопПараметры = Новый Структура;
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеРедактированиеЭлементаГруппы", ЭтотОбъект, ДопПараметры);
	ОткрытьФорму("Справочник.ЕАС_ШаблоныОтчетов.ФормаГруппы", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ПометитьГруппуНаУдаление(Команда)
	ДанныеСтроки = Элементы.ДеревоГрупп.ДанныеСтроки(Элементы.ДеревоГрупп.ТекущаяСтрока);
	Если ДанныеСтроки <> Неопределено Тогда
		ПометитьГруппуНаУдалениеНаКлиенте(ДанныеСтроки);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписки(Команда)
	ДанныеСтроки = Элементы.ДеревоГрупп.ДанныеСтроки(Элементы.ДеревоГрупп.ТекущаяСтрока);
	Если ДанныеСтроки <> Неопределено Тогда
		ТекущаяСсылка = ДанныеСтроки.Ссылка;
	КонецЕсли;	
	СформироватьДеревоНаФорме();
	РазвернутьДеревоГрупп();
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.ДеревоГрупп);
	МассивЭлементов.Добавить(Элементы.Список);
	ОбновитьОтображениеДанных(МассивЭлементов);
	Если ТекущаяСсылка <> Неопределено Тогда
		ПрекратитьПоиск = Ложь;
		ИдентификаторСтроки = Неопределено;
		ОбщегоНазначенияКлиентСервер.ПолучитьИдентификаторСтрокиДереваПоЗначениюПоля("Ссылка", ИдентификаторСтроки, ДеревоГрупп.ПолучитьЭлементы(), ТекущаяСсылка, ПрекратитьПоиск);
		Если ПрекратитьПоиск Тогда
			Элементы.ДеревоГрупп.ТекущаяСтрока = ИдентификаторСтроки;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоГрупп

&НаКлиенте
Процедура ДеревоГруппПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("УстановитьОтборСпискаПоРодителю", 0.3, Истина);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСпискаПоРодителю()
	ТекущиеДанныеГруппы = Элементы.ДеревоГрупп.ТекущиеДанные;
	Если ТекущиеДанныеГруппы = Неопределено Тогда
		ТекущийРодитель = ПредопределенноеЗначение("Справочник.ЕАС_ШаблоныОтчетов.ПустаяСсылка");
	Иначе	
		ТекущийРодитель = ТекущиеДанныеГруппы.Ссылка;         
	КонецЕсли;	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
																			"Родитель",
	                                                                        ТекущийРодитель,
																			ВидСравненияКомпоновкиДанных.Равно,
																			,
																			Истина,
																			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
																			
																			
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоГруппВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ДанныеСтроки = Элементы.ДеревоГрупп.ДанныеСтроки(ВыбраннаяСтрока); 
	Если ДанныеСтроки <> Неопределено Тогда
		РедактироватьГруппу(ДанныеСтроки.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоГруппПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ДобавитьГруппу(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоГруппПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	ДанныеСтроки = Элементы.ДеревоГрупп.ДанныеСтроки(Элементы.ДеревоГрупп.ТекущаяСтрока);
	Если ДанныеСтроки <> Неопределено Тогда
		ПометитьГруппуНаУдалениеНаКлиенте(ДанныеСтроки);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоГруппПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив")
			И ПараметрыПеретаскивания.Значение.Количество() > 0    
			И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("СправочникСсылка.ЕАС_ШаблоныОтчетов") Тогда
		// перенос элемента списка	
		ДанныеСтроки = Элементы.ДеревоГрупп.ДанныеСтроки(Строка);
		Если ДанныеСтроки <> Неопределено Тогда
			ИзменитьРодителяНаСервере(ПараметрыПеретаскивания.Значение, ДанныеСтроки.Ссылка);
		КонецЕсли;	
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив")
			И ПараметрыПеретаскивания.Значение.Количество() > 0 
			И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("Число") Тогда
		// перенос группы списка	
		ДанныеСтрокиКуда = Элементы.ДеревоГрупп.ДанныеСтроки(Строка); // куда
		Если ДанныеСтрокиКуда <> Неопределено Тогда
			МассивОткуда = Новый Массив;
			Для Каждого СтрокаОткуда Из ПараметрыПеретаскивания.Значение Цикл
				ДанныеСтроки = Элементы.ДеревоГрупп.ДанныеСтроки(СтрокаОткуда);
				Если ДанныеСтроки <> Неопределено Тогда
					МассивОткуда.Добавить(ДанныеСтроки.Ссылка);
				КонецЕсли;	
			КонецЦикла;	
			Если МассивОткуда.Количество() > 0 Тогда
				ИзменитьРодителяНаСервере(МассивОткуда, ДанныеСтрокиКуда.Ссылка);
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;		
	ОбновитьСписки(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СкопироватьСтрокиДереваНаФорму(Дерево, ЭлементыДерева, КартинкаПапки)      	
	
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		ЭлементДерева = ЭлементыДерева.Добавить();
		ЗаполнитьЗначенияСвойств(ЭлементДерева, СтрокаДерева);
		Если СтрокаДерева.Строки.Количество() > 0 Тогда
			СкопироватьСтрокиДереваНаФорму(СтрокаДерева, ЭлементДерева.ПолучитьЭлементы(), КартинкаПапки);
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоНаФорме()      	
	
	Попытка
		КартинкаПапки = БиблиотекаКартинок.Папки;
	Исключение
		КартинкаПапки = Неопределено;
	КонецПопытки;	
	
	Элементы.ДеревоГрупп.КартинкаСтрок = КартинкаПапки;
	
	Запрос = Новый Запрос;         
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕАС_ШаблоныОтчетов.Ссылка КАК Ссылка,
		|	ЕАС_ШаблоныОтчетов.Код КАК Код,
		|	ЕАС_ШаблоныОтчетов.Наименование КАК Наименование,
		|	ЕАС_ШаблоныОтчетов.ПометкаУдаления КАК ПометкаУдаления,
		|	ВЫБОР
		|		КОГДА ЕАС_ШаблоныОтчетов.ПометкаУдаления
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ИндексКартинки
		|ИЗ
		|	Справочник.ЕАС_ШаблоныОтчетов КАК ЕАС_ШаблоныОтчетов
		|ГДЕ
		|	ЕАС_ШаблоныОтчетов.ЭтоГруппа
		|	И ЕАС_ШаблоныОтчетов.ОбластьДанных = &ОбластьДанных
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("ОбластьДанных", ЕАС_ОбластиДанныхКопируемый.ОбластьДанныхДляОбъектов());
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ЭлементыДерева = ДеревоГрупп.ПолучитьЭлементы();        
	ЭлементыДерева.Очистить();
	
	Корень = ЭлементыДерева.Добавить();
	Корень.Ссылка = Справочники.ЕАС_ШаблоныОтчетов.ПустаяСсылка();
	
	СкопироватьСтрокиДереваНаФорму(Дерево, Корень.ПолучитьЭлементы(), КартинкаПапки);
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоГрупп()
	ЭлементыДерева = ДеревоГрупп.ПолучитьЭлементы();        
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Элементы.ДеревоГрупп.Развернуть(ЭлементДерева.ПолучитьИдентификатор(),Истина);
	КонецЦикла;	
КонецПроцедуры


&НаКлиенте
Процедура РедактироватьГруппу(Ссылка)
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Ссылка); 
		ДопПараметры = Новый Структура;
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеРедактированиеЭлементаГруппы", ЭтотОбъект, ДопПараметры);
		ОткрытьФорму("Справочник.ЕАС_ШаблоныОтчетов.ФормаГруппы", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, ОписаниеОповещения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеРедактированиеЭлементаГруппы(Результат, ДопПараметры) Экспорт
	ОбновитьСписки(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ИзменитьРодителяНаСервере(МассивЭлементов, НовыйРодитель);
	НачатьТранзакцию();
	Попытка
		Блокировка = Новый БлокировкаДанных;
		Для Каждого СправочникСсылка Из МассивЭлементов Цикл
			ЭлементБлокировки = Блокировка.Добавить("Справочник.ЕАС_ШаблоныОтчетов");
			ЭлементБлокировки.Режим=РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", СправочникСсылка);
		КонецЦикла;	
		Блокировка.Заблокировать();
		Для Каждого СправочникСсылка Из МассивЭлементов Цикл
			СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
			Если СправочникОбъект.Родитель <> НовыйРодитель Тогда
				СправочникОбъект.Родитель = НовыйРодитель;
				СправочникОбъект.Записать();
			КонецЕсли;	
		КонецЦикла;	
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьГруппуНаУдалениеНаКлиенте(ДанныеСтроки)
	Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
		Если ДанныеСтроки.ПометкаУдаления Тогда
			ТекстВопроса = СтрШаблон(НСтр("ru = 'Снять пометку на удаление группы ""%1"" (и все вложенные элементы)?'"), ДанныеСтроки.Ссылка);
		Иначе	
			ТекстВопроса = СтрШаблон(НСтр("ru = 'Пометить на удаление группу ""%1"" (и все вложенные элементы) на удаление?'"), ДанныеСтроки.Ссылка);
		КонецЕсли;	
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("Ссылка", ДанныеСтроки.Ссылка);
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеВопросаПометкаУдаленияГруппы", ЭтотОбъект, ДопПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 10, КодВозвратаДиалога.Нет);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеВопросаПометкаУдаленияГруппы(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПометитьГруппуНаУдалениеНаСервере(ДопПараметры.Ссылка);
		ОбновитьСписки(Неопределено);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПометитьГруппуНаУдалениеНаСервере(Ссылка)
	СправочникОбъект = Ссылка.ПолучитьОбъект();
	СправочникОбъект.УстановитьПометкуУдаления(Не СправочникОбъект.ПометкаУдаления, Истина);
КонецПроцедуры

#КонецОбласти




	


 

