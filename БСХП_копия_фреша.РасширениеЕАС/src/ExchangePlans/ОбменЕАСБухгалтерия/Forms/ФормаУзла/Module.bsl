#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.ЭтотУзел Тогда
		Элементы.Организации.Видимость 						= Ложь;
		Элементы.ИспользоватьОтборПоОрганизациям.Видимость 	= Ложь;
	ИначеЕсли ЗначениеЗаполнено(Параметры.Свойство("Ключ")) 
			И Объект.ОбластьДанных <> ЕАС_ОбластиДанныхКопируемый.ОбластьДанныхДляОбъектов() Тогда
		ТекстОшибки = СтрШаблон(НСтр("ru-'Данный узел можно редактировать только в области %1'"),
		Объект.ОбластьДанных);			
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Отказ = Истина;
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)  
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоОрганизациямПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьДанныеУзла(Команда)
	УдалитьДанныеУзлаНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдалитьДанныеУзлаНаСервере()
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;	
	УзелИнформационнойБазы = Объект.Ссылка; 
	ОбластьДанных = Объект.ОбластьДанных;
	
	Если Объект.ЭтотУзел Тогда
		ТекстОшибки = НСтр("ru='Алгоритм для главного узла не готов'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	МассивРасширений = РасширенияКонфигурации.Получить(Новый Структура("Имя", "РасширениеЕАС"),
						ИсточникРасширенийКонфигурации.СеансАктивные);
	Если МассивРасширений.Количество() <> 1 Тогда
		ТекстОшибки = НСтр("ru='Ошибка конфигурации ЕАС'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	РасширенияЕАС = МассивРасширений[0].ПолучитьДанные();
	
	КонфигурацияЕАС = Новый ОбъектМетаданныхКонфигурация(РасширенияЕАС);
	
	ДокументыЕАС = КонфигурацияЕАС.Документы;
	Для Каждого ДокументЕАС Из ДокументыЕАС Цикл
		Если ДокументЕАС.ПринадлежностьОбъекта = Метаданные.СвойстваОбъектов.ПринадлежностьОбъекта.Заимствованный Тогда
			Продолжить;
		КонецЕсли;				
			
		Выборка = Документы[ДокументЕАС.Имя].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Не Выборка.ПометкаУдаления 
					И Выборка.ОбластьДанных = ОбластьДанных Тогда
				ДанныеОбъект = Выборка.ПолучитьОбъект();
				ДанныеОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	СправочникиЕАС = КонфигурацияЕАС.Справочники;
	Для Каждого СправочникЕАС Из СправочникиЕАС Цикл
		Если СправочникЕАС.ПринадлежностьОбъекта = Метаданные.СвойстваОбъектов.ПринадлежностьОбъекта.Заимствованный Тогда
			Продолжить;
		КонецЕсли;				
		Выборка = Справочники[СправочникЕАС.Имя].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Не Выборка.ПометкаУдаления 
					И Выборка.ОбластьДанных = ОбластьДанных Тогда
				ДанныеОбъект = Выборка.ПолучитьОбъект();
				ДанныеОбъект.УстановитьПометкуУдаления(Истина, Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ *
	|ИЗ
	|	РегистрСведений.ЕАС_СоответствияОбъектовИнформационныхБаз КАК ЕАС_СоответствияОбъектовИнформационныхБаз
	|ГДЕ
	|	ЕАС_СоответствияОбъектовИнформационныхБаз.УзелИнформационнойБазы = &УзелИнформационнойБазы";

	Запрос.УстановитьПараметр("УзелИнформационнойБазы", УзелИнформационнойБазы);
	Выборка = Запрос.Выполнить().Выбрать();

	Отбор = Новый Структура;
	Для Каждого Измерение Из Метаданные.РегистрыСведений.ЕАС_СоответствияОбъектовИнформационныхБаз.Измерения Цикл
		Отбор.Вставить(Измерение.Имя);
	КонецЦикла;	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ЕАС_СоответствияОбъектовИнформационныхБаз.СоздатьНаборЗаписей();
		Для Каждого КлючЗначение Из Отбор Цикл
			НаборЗаписей.Отбор[КлючЗначение.Ключ].Установить(Выборка[КлючЗначение.Ключ]);
		КонецЦикла;	
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
	КонецЦикла;

	Запрос.Текст = "ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.ЕАС_ПротоколыОбмена КАК ЕАС_ПротоколыОбмена
	|ГДЕ
	|	ЕАС_ПротоколыОбмена.ОбластьДанных = &ОбластьДанных";

	Запрос.УстановитьПараметр("ОбластьДанных", ОбластьДанных);
	Выборка = Запрос.Выполнить().Выбрать();

	Отбор = Новый Структура;
	Для Каждого Измерение Из Метаданные.РегистрыСведений.ЕАС_ПротоколыОбмена.Измерения Цикл
		Отбор.Вставить(Измерение.Имя);
	КонецЦикла;	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ЕАС_ПротоколыОбмена.СоздатьНаборЗаписей();
		Для Каждого КлючЗначение Из Отбор Цикл
			НаборЗаписей.Отбор[КлючЗначение.Ключ].Установить(Выборка[КлючЗначение.Ключ]);
		КонецЦикла;	
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
	КонецЦикла;
			
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПомеченныеНаУдаление(Команда)
	ПоказатьПредупреждение(, Нстр("ru='Используйте стандартную процедуру'"));
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьРегистрацию(Команда)
	ОтменитьРегистрациюНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтменитьРегистрациюНаСервере()
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;	
	УзелИнформационнойБазы = Объект.Ссылка; 
	НачатьТранзакцию();
	Попытка
		ПланыОбмена.УдалитьРегистрациюИзменений(УзелИнформационнойБазы);
		УзелОбъект = УзелИнформационнойБазы.ПолучитьОбъект();
		//УзелОбъект.НомерОтправленного = 0;
		//УзелОбъект.НомерПринятого = 0;
		УзелОбъект.Записать();
		ЗафиксироватьТранзакцию();
	Исключение	
		ОтменитьТранзакцию();
		ТекстОшибки = ОписаниеОшибки();
		ВызватьИсключение(ТекстОшибки);
	КонецПопытки;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимость()      
	Элементы.Организации.Видимость = Не Объект.ЭтотУзел И Объект.ИспользоватьОтборПоОрганизациям;
	Элементы.ГруппаКорреспондент.Видимость = Не Объект.ЭтотУзел;
	Элементы.ОбластьДанных.Видимость       = Не Объект.ЭтотУзел;
КонецПроцедуры	


#КонецОбласти
