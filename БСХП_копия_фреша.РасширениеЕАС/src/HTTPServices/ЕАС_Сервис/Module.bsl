#Область СлужебныеПроцедурыИФункции

Функция ВерсияРасширения(Запрос)
	ТекущаяВерсия = ЕАС_ОбменСерверПовтИспКопируемый.ВерсияРасширения();
	Если ТекущаяВерсия = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(404);
		Ответ.Причина = НСтр("ru = 'Расширение ЕАС не найдено.', en = 'Extension PFI is not found.'");
	Иначе	
		Ответ = Новый HTTPСервисОтвет(200);
		Ответ.УстановитьТелоИзСтроки(ТекущаяВерсия, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.Авто);
	КонецЕсли;	
	Возврат Ответ;                 
КонецФункции

Функция ПолучитьОтправитьИзменения(Запрос)
	Перем ТекстОшибки, ДанныеСообщения;
	
	Протокол = Новый ТекстовыйДокумент;
	СтруктураПротокол = ЕАС_ПротоколированиеКопируемый.НачатьФормированиеПротокола(Перечисления.ЕАС_ВидыПротоколовОбмена.Вручную, Протокол);
	
	Попытка
		// прочитать сообщение
		Тело = Запрос.ПолучитьТелоКакСтроку("UTF-8");     
		Если ЗначениеЗаполнено(Тело) Тогда
			ЕАС_ОбменВызовСервераКопируемый.ПрочитатьXMLСообщениеЕАС(Тело, ТекстОшибки, СтруктураПротокол, ДанныеСообщения);
			Если ЗначениеЗаполнено(ТекстОшибки) Тогда
				ТекстОшибки = СтрШаблон(НСтр("ru='Ошибка обработки входящего сообщения ""%1"")'"), ТекстОшибки);
				Ответ = Новый HTTPСервисОтвет(400);
				Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
			КонецЕсли;	
		Иначе	
			ТекстОшибки = НСтр("ru = 'Отсутствует входящее сообщение'");
			Ответ = Новый HTTPСервисОтвет(400);
			Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
		КонецЕсли;	
		
		// сформировать сообщение
		Если Ответ = Неопределено Тогда
			УзелОбмена = ДанныеСообщения.УзелОбмена;
			Результат = ЕАС_ОбменВызовСервераКопируемый.СформироватьXMLСообщениеЕАС(УзелОбмена, ТекстОшибки, СтруктураПротокол); 
			Если ЗначениеЗаполнено(ТекстОшибки) Тогда
				ТекстОшибки = СтрШаблон(НСтр("ru='Ошибка формирования исходящего сообщения ""%1"")'"), ТекстОшибки);
				Ответ = Новый HTTPСервисОтвет(400);
				Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
			Иначе	
				Ответ = Новый HTTPСервисОтвет(200);
				Ответ.УстановитьТелоИзСтроки(Результат, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.Авто);
			КонецЕсли;	
		КонецЕсли;	
		
		ТекстПротокол = ?(Ответ.КодСостояния = 200, 
							НСтр("ru = 'Обмен закончен успешно'"),
							СтрШаблон(НСтр("ru = 'Обмен закончен с ошибкой %1'"), ТекстОшибки));
		
		ЕАС_ПротоколированиеКопируемый.СообщениеВПротокол(СтруктураПротокол, ТекстПротокол, 1);
		ЕАС_ПротоколированиеКопируемый.ЗакончитьФормированиеПротокола(СтруктураПротокол);
		
		Возврат Ответ;
	
	Исключение
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Ошибка обработки HTTP запроса %1'"), ОписаниеОшибки());
		ЕАС_ПротоколированиеКопируемый.СообщениеВПротокол(СтруктураПротокол, ТекстОшибки, 1);
		ЕАС_ПротоколированиеКопируемый.ЗакончитьФормированиеПротокола(СтруктураПротокол);
		
		Ответ = Новый HTTPСервисОтвет(400);
		Ответ.УстановитьТелоИзСтроки(ТекстОшибки);
		Возврат Ответ;
	КонецПопытки;
	
	
КонецФункции

#КонецОбласти

