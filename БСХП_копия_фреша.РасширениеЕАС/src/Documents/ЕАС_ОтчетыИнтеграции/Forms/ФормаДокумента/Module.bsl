#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПредыдущийШаблон = Объект.Шаблон;
	
	УстановитьУсловноеОформление();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ХранилищеДанных = ЕАС_ОбщегоНазначенияКопируемый.ПолучитьПрисоединенныеДанные(ТекущийОбъект.Ссылка, Перечисления.ЕАС_ВидыПрисоединенныхДанных.ТабличныйДокумент);
	
	Если ЗначениеЗаполнено(ХранилищеДанных) Тогда 
		Результат = ХранилищеДанных.Получить();
		ПрочитатьШаблонОтчета(ТекущийОбъект.Шаблон, Ложь, Ложь);
	Иначе	
		ПрочитатьШаблонОтчета(ТекущийОбъект.Шаблон, Истина, Истина);
	КонецЕсли;
	
	УстановитьДопРеквизитыТабличнойЧасти();
	
КонецПроцедуры                                  

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЕАС_ОбщегоНазначенияКопируемый.ЗаписатьПрисоединенныеДанные(ТекущийОбъект.Ссылка, Перечисления.ЕАС_ВидыПрисоединенныхДанных.ТабличныйДокумент, Результат);
	УстановитьДопРеквизитыТабличнойЧасти();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЭтоАдресВременногоХранилища(АдресПолейШаблона) Тогда
		УдалитьИзВременногоХранилища(АдресПолейШаблона);
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
	Если Объект.Шаблон <> ПредыдущийШаблон Тогда
		ПрочитатьШаблонОтчета(Объект.Шаблон, Истина);
		ПредыдущийШаблон = Объект.Шаблон;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметровЗаполнения

&НаКлиенте
Процедура ПараметрыОтчетаЗначениеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.РассчитанныеПоказатели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.ПолеФормы) Тогда
		
		Если ТекущиеДанные.ВозможнаРучнаяКорректировка Тогда
			ИмяПоля = ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.ИмяЯчейкиПоСсылке(ТекущиеДанные.ПолеФормы);
			Область = Результат.Области.Найти(ИмяПоля);
			Если Область <> Неопределено Тогда                 
				Область.Значение = ТекущиеДанные.Значение;
				ТекущиеДанные.УстановленоВручную = Истина;
			КонецЕсли;
		Иначе
			ПоказатьПредупреждение(, НСтр("ru='Корректировка значения запрещена. Изменение не будет отражено в документе.'"));
		КонецЕсли;
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗаполненияПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗаполненияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗаполненияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.ПараметрыЗаполнения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	ТекущийТип = ТипЗнч(ТекущиеДанные.ЗначениеВФорме);
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(ТекущийТип);
	Элементы.ПараметрыЗаполненияЗначениеВФорме.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыЗаполненияЗначениеВФормеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПараметрыЗаполнения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;                                    
	КонецЕсли;	
	ТекущиеДанные.Значение = ЗначениеВСтрокуСервер(ТекущиеДанные.ЗначениеВФорме);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТабличныйДокумент

&НаКлиенте
Процедура РезультатПриАктивизации(Элемент)
	
	ТекущаяОбласть = Элемент.ТекущаяОбласть;
	Элемент.Редактирование = Ложь;
	
	ОписаниеПоля = ОписаниеПоляШаблона(АдресПолейШаблона, ТекущаяОбласть.Имя);
	Если ТипЗнч(ОписаниеПоля) = Тип("Структура") Тогда
		Если ОписаниеПоля.РучнаяКорректировка Тогда
			Элемент.Редактирование = Истина;
			ТекущаяОбласть.СодержитЗначение = Истина;
			ТекущаяОбласть.ТипЗначения = Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15, ОписаниеПоля.ТочностьЧисла));
			ТекущаяОбласть.Формат = "ЧН=;ЧДЦ=" + ОписаниеПоля.ТочностьЧисла;
		КонецЕсли;				
	КонецЕсли;                  
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ОписаниеПоля = ОписаниеПоляШаблона(АдресПолейШаблона, Область.Имя);
	Если ТипЗнч(ОписаниеПоля) = Тип("Структура") Тогда
		ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.УстановитьПоказатель(Объект.РассчитанныеПоказатели, ОписаниеПоля, Область.Значение, Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если ЗначениеЗаполнено(Объект.Шаблон) Тогда
		ЗаполнитьПоШаблону();             
	Иначе
		ПоказатьПредупреждение(,НСтр("ru='Выберите шаблон для заполнения'"));
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ПрочитатьШаблонОтчета(Объект.Шаблон, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыНаКлиенте(Команда)
	УстановитьПараметрыЗаполненияПоУмолчанию();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции               

&НаСервереБезКонтекста
Функция ЗначениеВСтрокуСервер(Значение)
	Результат = ЗначениеВСтрокуВнутр(Значение);
	Возврат Результат;
КонецФункции

&НаСервере
Процедура УстановитьПараметрыЗаполненияПоУмолчанию()               
	Объект.ПараметрыЗаполнения.Очистить();
	Для Каждого ПараметрЗаполненияШаблон Из Объект.Шаблон.ПараметрыЗаполнения Цикл
		ПараметрЗаполнения = Объект.ПараметрыЗаполнения.Добавить();
		ЗаполнитьЗначенияСвойств(ПараметрЗаполнения, ПараметрЗаполненияШаблон);
		ЗначениеВФорме = ЕАС_ПараметрыЗаполненияСервер.ЗначениеПараметраПоУмолчанию(ПараметрЗаполнения.Тип, ПараметрЗаполнения.Список);
		ЗначениеПараметра = Неопределено;
		Если Не ПустаяСтрока(ПараметрЗаполненияШаблон.Алгоритм) Тогда
			НачатьТранзакцию();
			УстановитьБезопасныйРежим(Истина);
			Выполнить(ПараметрЗаполненияШаблон.Алгоритм);
			УстановитьБезопасныйРежим(Ложь);
			ОтменитьТранзакцию();
			Если ЗначениеПараметра <> Неопределено 
					И ТипЗнч(ЗначениеПараметра) = ТипЗнч(ЗначениеВФорме)
					И (ТипЗнч(ЗначениеПараметра) <> Тип("СписокЗначений")
						Или ЗначениеПараметра.ТипЗначения = ЗначениеВФорме.ТипЗначения) Тогда
				ЗначениеВФорме = ЗначениеПараметра;
			КонецЕсли;	
		КонецЕсли;	
		ПараметрЗаполнения.ЗначениеВФорме = ЗначениеВФорме;
		ПараметрЗаполнения.Значение = ЗначениеВСтрокуСервер(ЗначениеВФорме);
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура УстановитьДопРеквизитыТабличнойЧасти()       
	
	МассивПолей = Новый Массив;
	СоответствиеПолей = Новый Соответствие;
	Для Каждого СтрокаПоказателя Из Объект.РассчитанныеПоказатели Цикл
		МассивПолей.Добавить(СтрокаПоказателя.ПолеФормы);
		СоответствиеПолей.Вставить(СтрокаПоказателя.ПолеФормы, СтрокаПоказателя); 
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоляФормШаблонов.Ссылка КАК Ссылка,
		|	ПоляФормШаблонов.РучнаяКорректировка КАК ВозможнаРучнаяКорректировка
		|ИЗ
		|	Справочник.ЕАС_ПоляФормШаблонов КАК ПоляФормШаблонов
		|ГДЕ
		|	ПоляФормШаблонов.Ссылка В(&ПоляФорм)";
	
	Запрос.УстановитьПараметр("ПоляФорм", МассивПолей);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		СтрокаПоказателя = СоответствиеПолей.Получить(РезультатЗапроса.Ссылка);
		СтрокаПоказателя.ВозможнаРучнаяКорректировка = РезультатЗапроса.ВозможнаРучнаяКорректировка;
	КонецЦикла;
	
	Для Каждого ПараметрЗаполнения Из Объект.ПараметрыЗаполнения Цикл
		Если ЗначениеЗаполнено(ПараметрЗаполнения.Значение) Тогда
			ПараметрЗаполнения.ЗначениеВФорме = ЗначениеИЗСтрокиВнутр(ПараметрЗаполнения.Значение);
		Иначе	
			ПараметрЗаполнения.ЗначениеВФорме = ЕАС_ПараметрыЗаполненияСервер.ЗначениеПараметраПоУмолчанию(ПараметрЗаполнения.Тип, ПараметрЗаполнения.Список);
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеПоляШаблона(АдресПолейШаблона, ИмяЯчейки)
	Если ЭтоАдресВременногоХранилища(АдресПолейШаблона) Тогда
		ТаблицаПолейШаблона = ПолучитьИзВременногоХранилища(АдресПолейШаблона);
	КонецЕсли;
	
	Если ТипЗнч(ТаблицаПолейШаблона) = Тип("ТаблицаЗначений") Тогда
		ПараметрыОтбора = Новый Структура("ИмяЯчейки", ИмяЯчейки);
		СтрокиТаблицыПолей = ТаблицаПолейШаблона.НайтиСтроки(ПараметрыОтбора);
		Если СтрокиТаблицыПолей.Количество() > 0 Тогда
			ОписаниеПолей = Новый Структура();
			СтрокаТаблицыПолей = СтрокиТаблицыПолей[0];
			Для Каждого Колонка Из ТаблицаПолейШаблона.Колонки Цикл
				ОписаниеПолей.Вставить(Колонка.Имя, СтрокаТаблицыПолей[Колонка.Имя]);
			КонецЦикла;
			Возврат ОписаниеПолей;             
		КонецЕсли;	
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ПрочитатьШаблонОтчета(Шаблон, ОбновитьТабличныйДокумент = Истина, ОбновитьПараметрыЗаполнения = Истина)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
		
	АдресПолейШаблона = "";
	Если ЗначениеЗаполнено(Шаблон) Тогда
		ХранилищеДанных = ЕАС_ОбщегоНазначенияКопируемый.ПолучитьПрисоединенныеДанные(Шаблон, Перечисления.ЕАС_ВидыПрисоединенныхДанных.ТабличныйДокумент);
		Если ЗначениеЗаполнено(ХранилищеДанных) Тогда 
			ТабличныйДокумент = ХранилищеДанных.Получить();
			
			ТаблицаПолейШаблона = ЕАС_ОбработкаШаблоновКопируемый.ТаблицаПолейШаблона(ТабличныйДокумент, Шаблон, Неопределено);
			Если ЭтоАдресВременногоХранилища(АдресПолейШаблона) Тогда
				УдалитьИзВременногоХранилища(АдресПолейШаблона);
			КонецЕсли;	
			АдресПолейШаблона = ПоместитьВоВременноеХранилище(ТаблицаПолейШаблона, Новый УникальныйИдентификатор);
		КонецЕсли;
		Если ОбновитьПараметрыЗаполнения Тогда
			УстановитьПараметрыЗаполненияПоУмолчанию();
		КонецЕсли;	
	КонецЕсли;
	
	Если ОбновитьТабличныйДокумент Тогда
		Результат = ТабличныйДокумент;
		Объект.РассчитанныеПоказатели.Очистить();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоШаблону()          
	
	ПрочитатьШаблонОтчета(Объект.Шаблон, Ложь, Ложь);
	
	ХранилищеДанных = ЕАС_ОбщегоНазначенияКопируемый.ПолучитьПрисоединенныеДанные(Объект.Шаблон, Перечисления.ЕАС_ВидыПрисоединенныхДанных.ТабличныйДокумент);
	
	Если ЗначениеЗаполнено(ХранилищеДанных) Тогда 
		ТабличныйДокумент = ХранилищеДанных.Получить();
	Иначе
		ТабличныйДокумент = Новый ТабличныйДокумент;
	КонецЕсли;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Организация",   Объект.Организация);
	СтруктураЗаполнения.Вставить("Ответственный", Объект.Ответственный);
	СтруктураЗаполнения.Вставить("Комментарий",   Объект.Комментарий);
	
	ОписанияОбластейСсылок = Новый Соответствие;
	
	ВыборкаПолейШаблона = ЕАС_ОбработкаШаблоновКопируемый.ВыборкаПолейШаблона(ТабличныйДокумент, Объект.Шаблон, ОписанияОбластейСсылок);
	Пока ВыборкаПолейШаблона.Следующий() Цикл
		ОписаниеОбласти = ОписанияОбластейСсылок.Получить(ВыборкаПолейШаблона.Ссылка);
		Если ОписаниеОбласти <> Неопределено Тогда
			ОбластьЯчейка = ОписаниеОбласти.Область;
			ИмяПараметра  = ОписаниеОбласти.ИмяПараметра;
			Если ИмяПараметра <> Неопределено Тогда
				ЗначениеПоказателя = 0;
				ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.УстановитьПоказатель(Объект.РассчитанныеПоказатели, ВыборкаПолейШаблона, ЗначениеПоказателя);
				ЗначениеПоказателя = ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.ПолучитьПоказатель(Объект.РассчитанныеПоказатели, ВыборкаПолейШаблона);
				
				ОбластьЯчейка.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
				ОбластьЯчейка.Параметр   = ИмяПараметра;
				ОбластьЯчейка.Формат     = "ЧДЦ=" + ВыборкаПолейШаблона.ТочностьЧисла;
				СтруктураЗаполнения.Вставить(ИмяПараметра, ЗначениеПоказателя); 
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
	// Инициализация данных
	НачальнаяТаблица = ИнициализацияТаблицыДанных();
	
	СтруктураСтроки = Новый Структура;                      
	Для Каждого Колонка Из НачальнаяТаблица.Колонки Цикл
		Если Колонка.Имя <> "РезультатВычисления" Тогда
			СтруктураСтроки.Вставить(Колонка.Имя);        
		КонецЕсли;	
	КонецЦикла;	                                             
	
	Алгоритмы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Шаблон, "АлгоритмНачальногоЗаполненияШаблона,АлгоритмЗавершенияЗаполненияШаблона");
	
	// исполнение начального алгоритма
	ЕАС_ЗаполнениеОтчетов.ВыполнитьАлгоритмБезопасно(Объект, Алгоритмы.АлгоритмНачальногоЗаполненияШаблона, НачальнаяТаблица, СтруктураСтроки, ВыборкаПолейШаблона);

	
	// приведем даты до дня
	Для Каждого СтрокаТаблицы Из НачальнаяТаблица Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаТаблицы);
		ВыборкаПолейШаблона.Сбросить();
		Пока ВыборкаПолейШаблона.НайтиСледующий(СтруктураСтроки) Цикл          
			ОписаниеОбласти = ОписанияОбластейСсылок[ВыборкаПолейШаблона.Ссылка];
			Если ОписаниеОбласти <> Неопределено Тогда
				ОбластьЯчейка = ОписаниеОбласти.Область;
				ИмяПараметра  = ОписаниеОбласти.ИмяПараметра;
				
				Если ИмяПараметра <> Неопределено Тогда
					СтруктураЗаполнения.Вставить(ИмяПараметра, СтрокаТаблицы.РезультатВычисления);
					ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.УстановитьПоказатель(Объект.РассчитанныеПоказатели, ВыборкаПолейШаблона, СтрокаТаблицы.РезультатВычисления);
				КонецЕсли;	
				
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	
	// Обработка по каждому полю
	ВыборкаПолейШаблона.Сбросить();     
	ВыборкаНеЗакончена = ВыборкаПолейШаблона.Следующий();    
	Пока ВыборкаНеЗакончена Цикл
		Попытка
			Пока ВыборкаНеЗакончена Цикл
				ОписаниеОбласти = ОписанияОбластейСсылок.Получить(ВыборкаПолейШаблона.Ссылка);
				Если ОписаниеОбласти <> Неопределено Тогда
					ОбластьЯчейка = ОписаниеОбласти.Область;
					ИмяПараметра  = ОписаниеОбласти.ИмяПараметра;
					Если ИмяПараметра <> Неопределено Тогда
						ТекущийРезультатРасчета = ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.ПолучитьПоказатель(Объект.РассчитанныеПоказатели, ВыборкаПолейШаблона);
						Если ЗначениеПоказателя = Неопределено Тогда
							ТекущийРезультатРасчета = 0;
						КонецЕсли;	
						АлгоритмРасчетаЯчейки = ВыборкаПолейШаблона.АлгоритмРасчета;
						Если ЗначениеЗаполнено(АлгоритмРасчетаЯчейки) Тогда
							РезультатРасчета = ТекущийРезультатРасчета;
							СтрокаПоиска = "ЗначениеПоказателя(""";
							ПозицияЗамены = СтрНайти(АлгоритмРасчетаЯчейки, "ЗначениеПоказателя(""");
							Пока ПозицияЗамены > 0 Цикл
								ПозицияПравойСкобки = СтрНайти(АлгоритмРасчетаЯчейки, """)", НаправлениеПоиска.СНачала, ПозицияЗамены);
								Если ПозицияПравойСкобки > 0 Тогда    
									НачалоНаименования = ПозицияЗамены + СтрДлина(СтрокаПоиска);
									НаименованиеПоляФормы = Сред(АлгоритмРасчетаЯчейки, НачалоНаименования, ПозицияПравойСкобки - НачалоНаименования);
									Показатель = Справочники.ЕАС_ПоляФормШаблонов.НайтиПоНаименованию(НаименованиеПоляФормы, Ложь,, Объект.Шаблон);
									Если Показатель.Пустая() Тогда
										ЗначениеПоказателя = 0;
									Иначе
										ОписаниеПоля = Новый Структура("Ссылка", Показатель);
										ЗначениеПоказателя = ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.ПолучитьПоказатель(Объект.РассчитанныеПоказатели, ОписаниеПоля);
										Если ЗначениеПоказателя = Неопределено Тогда
											ЗначениеПоказателя = 0;
										КонецЕсли;	
									КонецЕсли;	
								
									АлгоритмРасчетаЯчейки = СтрЗаменить(АлгоритмРасчетаЯчейки, СтрокаПоиска + НаименованиеПоляФормы + """)", Формат(ЗначениеПоказателя, "ЧРД=.; ЧН=0; ЧГ=0"));
								Иначе
									Прервать; // что то не то в формуле - пропускаем
								КонецЕсли;								
								ПозицияЗамены = СтрНайти(АлгоритмРасчетаЯчейки, "ЗначениеПоказателя(""");
							КонецЦикла;	
							РезультатРасчета = Неопределено;
							
							ЕАС_ЗаполнениеОтчетов.ВыполнитьАлгоритмБезопасно(Объект, АлгоритмРасчетаЯчейки, НачальнаяТаблица, СтруктураСтроки, ВыборкаПолейШаблона);

							Если ТипЗнч(РезультатРасчета) = Тип("Число") И РезультатРасчета <> ТекущийРезультатРасчета Тогда
								ЕАС_ОбработкаШаблоновКлиентСерверКопируемый.УстановитьПоказатель(Объект.РассчитанныеПоказатели, ВыборкаПолейШаблона, РезультатРасчета);
								СтруктураЗаполнения.Вставить(ИмяПараметра, РезультатРасчета); 
							КонецЕсли;	
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;	
				ВыборкаНеЗакончена = ВыборкаПолейШаблона.Следующий();
			КонецЦикла;	
		Исключение
			ТекстСообщения = СтрШаблон(НСтр("ru='Ошибка расчета показателя %1 - %2'"),
											ВыборкаПолейШаблона.Ссылка,
											ОписаниеОшибки());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);								
			ВыборкаНеЗакончена = ВыборкаПолейШаблона.Следующий();
		КонецПопытки;
	КонецЦикла;	
	
	// исполнение завершаещего алгоритма
	ЕАС_ЗаполнениеОтчетов.ВыполнитьАлгоритмБезопасно(Объект, Алгоритмы.АлгоритмЗавершенияЗаполненияШаблона, НачальнаяТаблица, СтруктураСтроки, ВыборкаПолейШаблона);
	
	ТабличныйДокумент.Параметры.Заполнить(СтруктураЗаполнения);
	
	Результат = Новый ТабличныйДокумент;
	Результат.Вывести(ТабличныйДокумент);
	
	УстановитьДопРеквизитыТабличнойЧасти();
	
КонецПроцедуры

&НаСервере
Функция ИнициализацияТаблицыДанных()
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("ПоказательОтчета",    Новый ОписаниеТипов("СправочникСсылка.ЕАС_ПоказателиОтчетов"));
	ТаблицаДанных.Колонки.Добавить("Источник",            Новый ОписаниеТипов("ПеречислениеСсылка.ЕАС_ВидыИсточниковДанных"));
	ТаблицаДанных.Колонки.Добавить("ДатаНачала",          Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ДатаОкончания",       Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ЕдиницаИзмерения",    Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения"));
	ТаблицаДанных.Колонки.Добавить("РезультатВычисления", Новый ОписаниеТипов("Число"));;
	
	ТаблицаДанных.Колонки.Добавить("ДопПараметр", Метаданные.Справочники.ЕАС_ПоляФормШаблонов.Реквизиты.ДопПараметр.Тип);
	
	Возврат ТаблицаДанных;    
	
КонецФункции                             

&НаСервере
Процедура УстановитьУсловноеОформление()
 
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();     
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РассчитанныеПоказателиЗначение.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РассчитанныеПоказатели.ВозможнаРучнаяКорректировка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();     
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РассчитанныеПоказатели.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РассчитанныеПоказатели.ВозможнаРучнаяКорректировка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноСиний);
	
КонецПроцедуры

&НаКлиенте
Функция ПечатьОтчета(ПараметрыПечати) Экспорт
	ЗаголовокФормы = СтрШаблон(НСтр("ru = 'Отчет ЕАС %1 от %2: шаблон - %3'" ),
										ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Объект.Номер),
										Формат(Объект.Дата, "ДЛФ=D"),
										Объект.Шаблон);
	
	ПараметрыПечатиТекущие = Новый Структура;                                       
	ПараметрыПечатиТекущие.Вставить("ЕАС_ТабличныйДокумент", Результат);
	ПараметрыПечатиТекущие.Вставить("ЗаголовокФормы",        ЗаголовокФормы);
	ПараметрыПечатиТекущие.Вставить("ЕАС_Шаблон",            Объект.Шаблон);
	
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ПараметрыПечати.МенеджерПечати,
													"ОтчетЕАС",
													ПараметрыПечати.ОбъектыПечати,
													ЭтотОбъект,
													ПараметрыПечатиТекущие);
													
    //   Обработчик печати.
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
