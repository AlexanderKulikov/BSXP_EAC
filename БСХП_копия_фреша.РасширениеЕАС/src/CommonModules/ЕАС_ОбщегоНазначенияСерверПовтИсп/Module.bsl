#Область ПрограммныйИнтерфейс       

// Возвращает таблицу значений с описанием типов используемых в ИБ.
//
// Возвращаемое значение:
// ТаблицаЗначений - таблица значений с колонками:
// 	* ИмяТипа - Строка(20) - имя главного типа "Строка", "Документ" ...,
// 	* ПредставлениеТипа - Строка(20) - представление имени главного типа,
// 	* ПолноеИмяТипа - Строка(200) - Имя данных как оно представляется в XMLТип,
// 	* ПолноеПредставлениеТипа - Строка(200) - представление типа в ИБ,
// 	* ПространствоИмен - Строка - используемое пространство имен для типа,
// 	* Примитивный - Булево - признак того что тип является примитивным,
// 	* ОписаниеТипа - ОписаниеТипов - описание типа,
// 	* Тип - Тип - Тип данных.
//
Функция ТаблицаТиповПараметров() Экспорт
	
	ТаблицаТипов = Новый ТаблицаЗначений;
	ТаблицаТипов.Колонки.Добавить("ИмяТипа",                 Новый ОписаниеТипов("Строка",,, Новый КвалификаторыСтроки(20)));
	ТаблицаТипов.Колонки.Добавить("ПредставлениеТипа",       Новый ОписаниеТипов("Строка",,, Новый КвалификаторыСтроки(20)));
	ТаблицаТипов.Колонки.Добавить("ПолноеИмяТипа",           Новый ОписаниеТипов("Строка",,, Новый КвалификаторыСтроки(200)));
	ТаблицаТипов.Колонки.Добавить("ПолноеПредставлениеТипа", Новый ОписаниеТипов("Строка",,, Новый КвалификаторыСтроки(200)));
	ТаблицаТипов.Колонки.Добавить("ПространствоИмен",        Новый ОписаниеТипов("Строка"));
	ТаблицаТипов.Колонки.Добавить("Примитивный",             Новый ОписаниеТипов("Булево"));
	ТаблицаТипов.Колонки.Добавить("ОписаниеТипа",            Новый ОписаниеТипов("ОписаниеТипов"));
	ТаблицаТипов.Колонки.Добавить("Тип",                     Новый ОписаниеТипов("Тип"));
	                                              
	ПримитивныеТипы = СтрРазделить("Строка,Число,Дата,Булево", ",");
	Для Каждого ТипСтрокой Из ПримитивныеТипы Цикл
		ТекущийТип   = Тип(ТипСтрокой);
		ТипДанныхXML = XMLТип(ТекущийТип);
		
		ЗначениеТипа 		= ТипДанныхXML.ИмяТипа;
		ПредставлениеТипа   = Строка(ТекущийТип);        
		
		СтрокаТипов = ТаблицаТипов.Добавить();
		СтрокаТипов.ИмяТипа                 = ТипСтрокой;
		СтрокаТипов.ПредставлениеТипа       = ПредставлениеТипа;
		СтрокаТипов.ПолноеИмяТипа           = ЗначениеТипа;
		СтрокаТипов.ПолноеПредставлениеТипа = ПредставлениеТипа;
		СтрокаТипов.ПространствоИмен        = ТипДанныхXML.URIПространстваИмен;
		СтрокаТипов.Примитивный             = Истина;
		СтрокаТипов.Тип                     = ТекущийТип;
		
		ДобавляемыеТипы = Новый Массив;
		ДобавляемыеТипы.Добавить(ТекущийТип);
		СтрокаТипов.ОписаниеТипа = Новый ОписаниеТипов(ДобавляемыеТипы);
	КонецЦикла;
	
	НеПримитивныеТипы = СтрРазделить("Справочник,Документ,Перечисление,ПланСчетов,ПВХ,ПланОбмена", ",");
	Для Каждого ТипСтрокой Из НеПримитивныеТипы Цикл
		
		Если ТипСтрокой = "Справочник" Тогда
			МассивТипов = Справочники.ТипВсеСсылки().Типы();
			ПредставлениеТипа = НСтр("ru = 'Справочник'");
		ИначеЕсли ТипСтрокой = "Документ" Тогда
			МассивТипов = Документы.ТипВсеСсылки().Типы();
			ПредставлениеТипа = НСтр("ru = 'Документ'");
		ИначеЕсли ТипСтрокой = "Перечисление" Тогда
			МассивТипов = Перечисления.ТипВсеСсылки().Типы();
			ПредставлениеТипа = НСтр("ru = 'Перечисление'");
		ИначеЕсли ТипСтрокой = "ПланСчетов" Тогда
			МассивТипов = ПланыСчетов.ТипВсеСсылки().Типы();
			ПредставлениеТипа = НСтр("ru = 'План счетов'");
		ИначеЕсли ТипСтрокой = "ПВХ" Тогда
			МассивТипов = ПланыВидовХарактеристик.ТипВсеСсылки().Типы();         
			ПредставлениеТипа = НСтр("ru = 'ПВХ'");
		ИначеЕсли ТипСтрокой = "ПланОбмена" Тогда
			МассивТипов = ПланыОбмена.ТипВсеСсылки().Типы();         
			ПредставлениеТипа = НСтр("ru = 'План обмена'");
		Иначе
			Продолжить;
		КонецЕсли;
		
		СписокТипов = Новый СписокЗначений;
		Для каждого ТекущийТип Из МассивТипов Цикл
			СписокТипов.Добавить(ТекущийТип, Строка(ТекущийТип));
		КонецЦикла;
		СписокТипов.СортироватьПоПредставлению();
		
		Для каждого ЭлементТип Из СписокТипов Цикл
			
			ТекущийТип   = ЭлементТип.Значение;
			ТипДанныхXML = XMLТип(ТекущийТип);     
			ЗначениеТипа = ТипДанныхXML.ИмяТипа;
			
			СтрокаТипов = ТаблицаТипов.Добавить();
			СтрокаТипов.ИмяТипа                 = ТипСтрокой;
			СтрокаТипов.ПредставлениеТипа       = ПредставлениеТипа;
			СтрокаТипов.ПолноеИмяТипа           = ТипДанныхXML.ИмяТипа;
			СтрокаТипов.ПолноеПредставлениеТипа = Строка(ТекущийТип);
			СтрокаТипов.ПространствоИмен        = ТипДанныхXML.URIПространстваИмен;
			СтрокаТипов.Примитивный             = Ложь;
			СтрокаТипов.Тип                     = ТекущийТип;
			
			ДобавляемыеТипы = Новый Массив;
			ДобавляемыеТипы.Добавить(ТекущийТип);
			СтрокаТипов.ОписаниеТипа = Новый ОписаниеТипов(ДобавляемыеТипы);
			
		КонецЦикла;
		
	КонецЦикла;	
	
	Возврат ТаблицаТипов;
КонецФункции	

// Возвращает Структуру описания используемых типов в параметрах заполнения.
//
// Параметры:
//  ПредставлениеТипа - Строка - представление искомого типа ("Строка", "Число", "Справочник" и т.д.),
//  ПолноеИмяТипа - Строка - представление искомого типа ("Строка", "Число", "Справочник" и т.д.)
//
// Возвращаемое значение:
//  Структура - данные описания:
// * ИмяТипа - Строка - XML тип данных,
// * ПредставлениеТипа - Основная часть представления типа ("Строка", "Число", "Справочник" и т.д.),
// .. см. функцию ТаблицаТиповПараметров
// * СписокВыбора - Список значений представлений типов (при повторении наименования добавляется номер для уникальности).
//
Функция ОписаниеТипаСтруктура(ПредставлениеТипа, ПолноеИмяТипа = Неопределено) Экспорт
	ТаблицаТипов = ЕАС_ОбщегоНазначенияСерверПовтИсп.ТаблицаТиповПараметров();
	СтрокиТипов = ТаблицаТипов.НайтиСтроки(Новый Структура("ПредставлениеТипа", ПредставлениеТипа));
	Если СтрокиТипов.Количество() > 0 Тогда
		СтрокаТипов = СтрокиТипов[0];
		Результат = Новый Структура;
		Для Каждого Колонка Из ТаблицаТипов.Колонки Цикл 
			Результат.Вставить(Колонка.Имя, СтрокаТипов[Колонка.Имя]);
		КонецЦикла;
		
		СписокВыбора = Новый СписокЗначений;
		ТекущееПредставление = Неопределено;
		КоличествоОдинаковых = 0;
		Для Каждого СтрокаТипов Из СтрокиТипов Цикл
			Если Не СтрокаТипов.Примитивный Тогда
				Если ТекущееПредставление <> Строка(СтрокаТипов.Тип) Тогда
					ТекущееПредставление = Строка(СтрокаТипов.Тип);
					КоличествоОдинаковых = 1;
					СписокВыбора.Добавить(СтрокаТипов.Тип, Строка(СтрокаТипов.Тип));
				Иначе
					КоличествоОдинаковых = КоличествоОдинаковых + 1;
					СписокВыбора.Добавить(СтрокаТипов.Тип, Строка(СтрокаТипов.Тип) + " (" + КоличествоОдинаковых + ")");
				КонецЕсли;	
			КонецЕсли;	
			Если СтрокаТипов.ПолноеИмяТипа = ПолноеИмяТипа Тогда
				ЗаполнитьЗначенияСвойств(Результат, СтрокаТипов);
			КонецЕсли;	
		КонецЦикла;	
		
		Результат.Вставить("СписокВыбора", СписокВыбора);
	КонецЕсли;	
	Возврат Результат;
КонецФункции                                       

//Функция ПолучитьИмяПланаОбмена(УзелПланаОбмена) Экспорт
//	
//	Возврат УзелПланаОбмена.Метаданные().Имя;
//	
//КонецФункции

#КонецОбласти
